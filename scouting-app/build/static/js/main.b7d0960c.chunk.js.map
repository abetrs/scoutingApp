{"version":3,"sources":["Form.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","teamNumber","matchType","descending","cargoInSandstormCargoNotAccurate","cargoInSandstormCargoAccurate","cargoInSandstormCargoVeryAccurate","hatchInSandstormCargoNotAccurate","hatchInSandstormCargoAccurate","hatchInSandstormCargoVeryAccurate","cargoInSandstormRocketNotAccurate","cargoInSandstormRocketAccurate","cargoInSandstormRocketVeryAccurate","hatchInSandstormRocketNotAccurate","hatchInSandstormRocketAccurate","hatchInSandstormRocketVeryAccurate","hatchesInTeleOpCargo","cargoInTeleOpCargo","hatchesInTeleOpRocket","cargoInTeleOpRocket","highestRocketCargo","highestRocketHatch","handleSubmit","bind","assertThisInitialized","handleChange","event","setState","defineProperty","target","id","value","preventDefault","onSubmit","react_default","a","createElement","type","onChange","name","Component","App","fields","console","log","JSON","stringify","_this2","className","href","rel","Form_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7d0960c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          teamNumber: '',\n          matchType: '',\n          descending: '',\n          cargoInSandstormCargoNotAccurate:'',\n          cargoInSandstormCargoAccurate: '',\n          cargoInSandstormCargoVeryAccurate: '',\n          hatchInSandstormCargoNotAccurate: '',\n          hatchInSandstormCargoAccurate:'',\n          hatchInSandstormCargoVeryAccurate:'',\n          cargoInSandstormRocketNotAccurate: '',\n          cargoInSandstormRocketAccurate: '',\n          cargoInSandstormRocketVeryAccurate: '',  \n          hatchInSandstormRocketNotAccurate: '',\n          hatchInSandstormRocketAccurate: '',\n          hatchInSandstormRocketVeryAccurate: '',  \n          hatchesInTeleOpCargo: '',\n          cargoInTeleOpCargo: '',\n          hatchesInTeleOpRocket: '',\n          cargoInTeleOpRocket: '',\n          highestRocketCargo: '',\n          highestRocketHatch: '',\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event) {\n        this.setState({ [event.target.id]: event.target.value})\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        this.props.onSubmit(this.state);\n        this.setState ({\n            teamNumber: '',\n            matchType: '',\n            descending: '',\n            cargoInSandstormCargoNotAccurate: '',\n            cargoInSandstormCargoAccurate: '',\n            cargoInSandstormCargoVeryAccurate: '',\n            hatchInSandstormCargoNotAccurate: '',\n            hatchInSandstormCargoAccurate: '',\n            hatchInSandstormCargoVeryAccurate: '',\n            cargoInSandstormRocketNotAccurate: '',\n            cargoInSandstormRocketAccurate: '',\n            cargoInSandstormRocketVeryAccurate: '',\n            hatchInSandstormRocketNotAccurate: '',\n            hatchInSandstormRocketAccurate: '',\n            hatchInSandstormRocketVeryAccurate: '',\n            hatchesInTeleOpCargo: '',\n            cargoInTeleOpCargo: '',\n            hatchesInTeleOpRocket: '',\n            cargoInTeleOpRocket: '',\n            highestRocketCargo: '',\n            highestRocketHatch: '',\n        });\n    }\n    render() {\n        return (\n                <form onSubmit={this.handleSubmit}>\n                    //Team Number\n                    Team# of robot observing:\n                    <input\n                        type='number'\n                        id='teamNumber'\n                        value={this.state.teamNumber}\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    <br />\n                    //Match Type\n                    Match type:\n                    <br />\n                    Qualifications: <input\n                        type='radio'\n                        id='matchType'\n                        name='matchType'\n                        value='Qualifications'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    Eliminations: <input\n                        type='radio'\n                        id='matchType'\n                        name='matchType'\n                        value='Eliminations'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    //Sandstorm(Auto)\n                    <br />Sandstorm\n                    <br />\n                    <br />\n                    //Descending\n                    Descending:\n                    <br />\n                    Level 1: drove down ramp <input\n                        type='radio'\n                        id='descending'\n                        name='descending'\n                        value='Level 1'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    Level 2: dropped off of platform <input\n                        type='radio'\n                        id='descending'\n                        name='descending'\n                        value='Level 2'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    Did not make it out of HAB zone <input\n                        type='radio'\n                        id='descending'\n                        name='descending'\n                        value='Did not make it out of HAB'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    //Game Pieces-----------------------\n                    <br />Game Pieces\n                    <br />\n                    <br />\n                    Cargo In Ship\n                    <br />\n                    Not Accurate-<input\n                        type='checkbox'\n                        id='cargoInSandstormCargoNotAccurate'\n                        value='Not accurate'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    Accurate-<input\n                        type='checkbox'\n                        id='cargoInSandstormCargoAccurate'\n                        value='Accurate'\n                        onChange={this.handleChange}\n                    />\n                    <br/>\n                    Very Accurate-<input\n                        type='checkbox'\n                        id='cargoInSandstormCargoVeryAccurate'\n                        value='Very Accurate'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    <br />\n                    Hatches On Ship\n                    <br />\n                    Not Accurate-<input\n                        type='checkbox'\n                        id='hatchInSandstormCargoNotAccurate'\n                        value='Not Accurate'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    Accurate-<input\n                        type='checkbox'\n                        id='hatchInSandstormCargoAccurate'\n                        value='Accurate'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    Very Accurate-<input\n                        type='checkbox'\n                        id='hatchInSandstormCargoVeryAccurate'\n                        value='Very Accurate'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    <br />\n                    Cargo In Rocket\n                    <br />\n                    Not Accurate-<input\n                        type='checkbox'\n                        id='cargoInSandstormRocketNotAccurate'\n                        value='Not accurate'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    Accurate-<input\n                        type='checkbox'\n                        id='cargoInSandstormRocketAccurate'\n                        value='Accurate'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    Very Accurate-<input\n                        type='checkbox'\n                        id='cargoInSandstormRocketVeryAccurate'\n                        value='Very Accurate'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    <br />\n                    Hatches On Rocket\n                        <br />\n                    Not Accurate-<input\n                        type='checkbox'\n                        id='hatchInSandstormRocketNotAccurate'\n                        value='Not Accurate'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    Accurate-<input\n                        type='checkbox'\n                        id='hatchInSandstormRocketAccurate'\n                        value='Accurate'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    Very Accurate-<input\n                        type='checkbox'\n                        id='hatchInSandstormRocketVeryAccurate'\n                        value='Very Accurate'\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    //Tele-Op---------------------------\n                    <br />Tele-Operated Period:\n                    <br />\n                    How many hatches on cargo ship?\n                    <input\n                        type='number'\n                        id='hatchesInTeleOpCargo'\n                        value={this.state.hatchesInTeleOpCargo}\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    How many cargo in cargo ship?\n                    <input\n                        type='number'\n                        id='cargoInTeleOpCargo'\n                        value={this.state.cargoInTeleOpCargo}\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    <br />\n                    How many hatches on rocket ship?\n                    <input\n                        type='number'\n                        id='hatchesInTeleOpRocket'\n                        value={this.state.hatchesInTeleOpRocket}\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    How many cargo in rocket ship?\n                    <input\n                        type='number'\n                        id='cargoInTeleOpRocket'\n                        value={this.state.cargoInTeleOpRocket}\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    <br />\n                    Highest Rocket Cargo<input\n                        type='number'\n                        id='highestRocketCargo'\n                        value={this.state.highestRocketCargo}\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                    Highest Rocket Hatch<input\n                        type='number'\n                        id='highestRocketHatch'\n                        value={this.state.highestRocketHatch}\n                        onChange={this.handleChange}\n                    />\n                    <br />\n                        <input type='submit' value='Submit' />\n                </form>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\nimport './App.css';\nimport Form from './Form.js'\n\nclass App extends Component {\n  state = {\n    fields: {},\n  }\n  onSubmit(fields) {\n    console.log(fields);\n    JSON.stringify(this.state.fields);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>This is the Team 1389 Scouting Website app thing.</p>\n          <a\n            className=\"App-link\"\n            href=\"https://www.team1389.org/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Team 1389 Website\n          </a>\n        </header>\n        <Form onSubmit={fields => this.onSubmit(fields)}/>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}